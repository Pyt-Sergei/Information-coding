import math

P_A = [ 1/16 for i in range(16) ]
P_B = [2/16, 2/16, 2/16, 5/16, 1/16, 2/16, 2/16 ]


def H(X):
    return -sum(map(lambda x : x * math.log(x, 2) , filter(lambda x: x != 0,X) ))


P_AB = [ [1/2,0,0,0,0,0,0],
      [0,1/2,0,0,0,0,0],
      [0,0,0,1/5,0,0,0],
      [0,0,1/2,0,0,0,0],
      [0,0,1/2,0,0,0,0],
      [0,0,0,1/5,0,0,0],
      [0,0,0,0,0,1/2,0],
      [0,0,0,0,1,0,0],
      [0,0,0,1/5,0,0,0],
      [1/2,0,0,0,0,0,0],
      [0,1/2,0,0,0,0,0],
      [0,0,0,1/5,0,0,0],
      [0,0,0,0,0,0,1/2],
      [0,0,0,0,0,0,1/2],
      [0,0,0,1/5,0,0,0],
      [0,0,0,0,0,1/2,0] ]

def solve(P):
	ans = 0
	for i in range(7):
		summ = 0
		for j in range(16):
			if P[j][i] != 0 : summ += P[j][i] * math.log2(P[j][i])
		ans += summ * P_B[i]
	return -ans

print( H(P_A) - solve(P_AB) )
